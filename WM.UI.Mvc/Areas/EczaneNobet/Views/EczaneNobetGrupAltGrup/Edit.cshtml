@model EczaneNobetGrupAltGrupDetay

@{
    ViewBag.Title = "Eczane Nöbet Grup Alt Grup Düzenle | Nöbet Sistemi";

}
<h4>Eczane Nöbet Grup Alt Grup Düzenle</h4>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*@Html.HiddenFor(model => model.EczaneNobetGrupId)*@

    <div class="form-row mx-2">

        <div class="form-group col-md-3">
            @*@Html.LabelFor(model => model.EczaneNobetGrupId, "Eczane", htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="form-group">
                @*@Html.LabelFor(model => model.EczaneNobetGrupId, "EczaneNobetGrupId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                @Html.DropDownList("EczaneNobetGrupId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EczaneId, "", new { @class = "text-danger" })
                @*<div class="col-md-10">
                    </div>*@
            </div>

            @*<div class="col-md-10">
                     @Html.DropDownList("EczaneNobetGrupId", null, htmlAttributes: new
                     {
                         @class = "form-control selectpicker",
                    multiple = "true",
                    //data_width = "auto",
                    //data_actions_box = "true",
                    mobile = "true",
                    data_live_search = "true",
                    data_selected_text_format = "count > 4",
                    title = "Eczane Seçiniz..."
                })
                     @Html.ValidationMessageFor(model => model.EczaneNobetGrupId, "", new { @class = "text-danger" })
                 </div>*@
        </div>

        <div class="form-group col-md-2">
            @*@Html.LabelFor(model => model.BaslangicTarihi, htmlAttributes: new { @class = "control-label" })*@
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text p-2">
                        <i class="fa fa-calendar" aria-hidden="true"></i>
                    </span>
                </div>
                @Html.TextBoxFor(model => model.BaslangicTarihi, new { @class = "form-control datepicker p-2", placeHolder = "Gruba Giriş Tarihi", autocomplete = "off" })
            </div>
            @Html.ValidationMessageFor(model => model.BaslangicTarihi, "", new { @class = "text-danger" })
        </div>

        <div class="form-group col-md-2">
            @*@Html.LabelFor(model => model.BitisTarihi, htmlAttributes: new { @class = "control-label" })*@
            <div class="input-group">
                <div class="input-group-prepend">
                    <span class="input-group-text p-2">
                        <i class="fa fa-calendar" aria-hidden="true"></i>
                    </span>
                </div>
                @Html.TextBoxFor(model => model.BitisTarihi, new { @class = "form-control datepicker p-2", placeHolder = "Grutan Çıkış Tarihi", autocomplete = "off" })
            </div>
            @Html.ValidationMessageFor(model => model.BitisTarihi, "", new { @class = "text-danger" })
        </div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NobetAltGrupId, "Nöbet Alt Grubu", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("NobetAltGrupId", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.NobetAltGrupId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Aciklama, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Aciklama, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Aciklama, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Kaydet" class="btn btn-outline-primary" />
            @Html.ActionLink("Listeye Dön", "Index", null, new { @class = "btn btn-outline-warning" })
        </div>
    </div>
</div>
}


@section Styles{
    @*@Styles.Render("~/bundle/jqueryui/style")*@
    @Styles.Render("~/bundle/bootstrap-datepicker/style")
}

@section Scripts{
    @*@Scripts.Render("~/bundle/queryui/scripts")*@
    @*@Scripts.Render("~/bundle/bootstrap-datepicker/scripts")*@
    @Scripts.Render("~/bundle/bootstrap-datepicker_tr/scripts")

    <script>

        $(function () {

            $('.datepicker').datepicker('setStartDate', "01-01-1900");

            var baslangicStr = tarihDondur2($("#BaslangicTarihi").val());

            $("#BaslangicTarihi").datepicker("setDate", baslangicStr);

            var bitisStr = tarihDondur2($("#BitisTarihi").val());

            $("#BitisTarihi").datepicker("setDate", bitisStr);

            bitisTarihiKontol()

            //alert($("#BitisTarihi").length)

        });

        $("#btnSilBitisTarihi").click(function () {
            //bitisTarihi = null;
            $('#BitisTarihi').data('datepicker').setDate(null);
            $("#btnSilBitisTarihi").hide();
            $("#btnSilBitisTarihiFiltre").show();
        });

        $("#BitisTarihi").change(function () {
            bitisTarihiKontol()
            //var d = tarihiTrdenCevir(this.value);
            //$('#BitisTarihi').val(d);
        });

        function bitisTarihiKontol() {
            //alert($("#BitisTarihi").val().length)

            if ($("#BitisTarihi").val().length > 1) {
                $("#btnSilBitisTarihiFiltre").hide();
                $("#btnSilBitisTarihi").show();
            }
        }

        function tarihDondur2(metin) {

            var tarih = metin.split(' ', 1)[0];
            //alert(tarih)
            var tarihTanim = tarih.split(".");
            //var tarihTanim = metin.substring(0, 10).split(".");

            yil = tarihTanim[2] * 1;
            //alert(yil)
            ay = tarihTanim[1] * 1;
            gun = tarihTanim[0] * 1;

            if (gun.length != 4) {

                return new Date(yil, ay - 1, gun);//yil + "." + ay + "." + gun;
            }
            else {
                //alert(gun)
                return metin;
            }
        }
    </script>
}