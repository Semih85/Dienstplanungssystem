@model NobetciEcanelerEkraniViewModel
@{
    Layout = null;
}
<head>
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    @*<link rel="icon" href="~/Content/images/logo-nobetyaz.png" type="image/x-icon">*@
    <link rel="icon" type="image/png" href="~/Content/images/favicon-32x32-transperent.png" sizes="32x32" />
    <title>Nöbetçi Eczane Ekranı | Nöbet Yaz</title>

    <!-- Bootstrap, font-awasome, Site CSS -->
    @Styles.Render("~/bundle/style")
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <style>

        /*Extra small devices (portrait phones, less than 576px)*/
        @@media (max-width: 575px) {
            .network {
                height: 300px;
            }

            .harita {
                height: 250px;
            }

            .basliklar {
                height: 50px;
                font-size: xx-small;
            }

            .buyukEczane {
                height: 118px;
            }

            .kucukEczane {
                height: 163px;
                font-size: smaller;
            }
        }

        /*// Small devices (landscape phones, 576px and up)*/
        @@media (min-width: 576px) and (max-width: 767px) {
            .network {
                height: 450px;
            }

            .harita {
                height: 325px;
            }

            .basliklar {
                height: 50px;
            }

            .buyukEczane {
                height: 176px;
            }

            .kucukEczane {
                height: 143px;
            }
        }

        /*// Medium devices (tablets, 768px and up)*/
        @@media (min-width: 768px) and (max-width: 991px) {
            .network {
                height: 600px;
            }

            .harita {
                height: 400px;
            }

            .basliklar {
                height: 95px;
            }

            .buyukEczane {
                height: 230px;
            }

            .kucukEczane {
                height: 139px;
            }
        }

        /*// Large devices (desktops, 992px and up)*/
        @@media (min-width: 992px) and (max-width: 1199px) {
            .network {
                height: 700px;
            }

            .harita {
                height: 532px;
            }

            .basliklar {
                height: 95px;
            }
            /*.labelBaslik {
            font-size: x-small;
            font-weight: 300;
        }*/
            .buyukEczane {
                height: 268px;
            }

            .kucukEczane {
                height: 168px; /*123px;*/
                font-size: small;
            }
        }

        /*// Extra large devices (large desktops, 1200px and up)*/
        @@media (min-width: 1200px) and (max-width: 1399px) {
            .network {
                height: 800px;
            }

            .harita {
                height: 500px;
            }

            .basliklar {
                height: 95px;
            }

            .buyukEczane {
                height: 306px;
                font-size: large;
            }

            .kucukEczane {
                height: 157px; /*141px*/
                font-size: x-small;
            }
        }

        /*// Extra x-large devices (large desktops, 1400px and up)*/
        @@media (min-width: 1400px) {
            .network {
                height: 1000px;
            }

            .harita {
                height: 685px;
            }

            .basliklar {
                height: 95px;
            }

            .buyukEczane {
                height: 395px;
                font-size: x-large;
            }

            .kucukEczane {
                height: 227px;
                font-size: large;
            }
        }

        #eczaneSolSutun {
            background-color: purple;
            border-style: initial;
            border: double;
            border-color: #008000;
            text-align: center;
            color: white;
            align-items: center;
        }

        #eczaneSagSutun {
            background-color: purple;
            border-style: initial;
            border: double;
            border-color: #008000;
            text-align: center;
            color: white;
            align-items: center;
        }

        .eczaneHucre {
            /*height: 150px;*/
            border-bottom: double;
            border-top: double;
            border-color: #008000;
        }

        .adres {
            color: #b61e1e;
        }

        html, body {
            position: fixed;
            top: 0;
            bottom: 0;
            left: 0;
            right: 0;
        }

        .eczaneBuyukHucre {
            /*background-color: #000000;*/
            border-style: initial;
            border: double;
            border-color: #008000;
            text-align: center;
            color: white;
            font-size: x-large;
            /*height: 325px;*/
            margin-right: -15px;
            margin-left: -15px;
        }

        .buyukHarita {
            display: none;
            /*height: 430px;*/
            display: -ms-flexbox;
            display: flex;
            -ms-flex-wrap: wrap;
            flex-wrap: wrap;
            margin-right: -15px;
            margin-left: -15px;
            background-color: #000000
        }

        #labelTarih {
            color: white;
            background-color: purple;
            font-size: 22px;
            border-color: #008000;
            text-align: justify;
            /*border: double;*/
        }

        #labelBaslik {
            color: white;
            background-color: purple;
            font-size: 35px;
            border-color: #008000;
            border: double;
            font-weight: 600;
            border-style: initial;
            text-align: center;
            vertical-align: central;
        }

        #labelMesafe {
            color: black;
            background-color: white;
            font-size: 20px;
            margin-top: -30px;
            border-color: #008000;
            border: double;
            border-style: initial;
            text-align: center;
            font-weight: 800;
        }

        #labelSaat {
            color: white;
            background-color: purple;
            font-size: 50px;
            border-color: #008000;
            font-weight: 600;
            text-align: center;
            /*background-image: url('../../../../Content/images/saatArkaPlan.png');*/
            /*no-repeat center center fixed*/
            background-repeat: no-repeat;
            /*background:fixed*/
        }

        #ustRow {
            /*height: 86px;*/
        }
    </style>
</head>


<body>

    <div  id="loading" class="row">
        <div class="col-lg-3">
        </div>
        <div class="col-lg-4">
            <div align="center" style="margin-top: 10%">
                <img src="~/Content/images/orig.gif" />
            </div>
        </div>
        <div class="col-lg-4">
        </div>
    </div>

    <div id="div1" class="container-fluid">
        @* network *@
        <div id="ustRow" class="row basliklar">
            <div id="labelBaslik" class="col-lg-3">
                Nöbetçi Eczaneler
            </div>
            <div id="labelTarih" class="col-lg-6">
                <label id="lbl_tarih"></label>
            </div>
            <div id="labelSaat" class="col-lg-3">
                @*<label id="lbl_saat"></label>*@
            </div>
        </div>
        <div class="row">
            <div id="eczaneSolSutun" class="col-lg-3 ">
                <div class="eczaneHucre kucukEczane" id="div_1"></div>
                <div class="eczaneHucre kucukEczane" id="div_2"></div>
                <div class="eczaneHucre kucukEczane" id="div_3"></div>
            </div>
            <div class="col-lg-9">
                <div id="map0" class="buyukHarita harita"></div>
                <div id="map1" class="buyukHarita harita"></div>
                <div id="map2" class="buyukHarita harita"></div>
                <div class="row">
                    <div id="divMyLetterImage" style="height:5px; width:5px; margin-top:-100px; margin-left:-10px" class="col-4">

                    </div>
                    <div class="col-5"></div>
                    <div id="labelMesafe" class="col-3">
                        <label class="fa fa-car" id="lbl_mesafe0"> </label>
                        <label class="fa fa-car" id="lbl_mesafe1"> </label>
                        <label class="fa fa-car" id="lbl_mesafe2"> </label>
                    </div>
                </div>
                @*<div id="div_100" class="eczaneBuyukHucre buyukEczane">
                         <img style="width:60px;height:60px" src="~/Content/images/NobetciEczaneLogoUfaks.png" />
                    </div>*@
            </div>
   
        </div>
    </div>

    @section Scripts{
        @Scripts.Render("~/bundle/ajax")
        @Scripts.Render("~/bundle/bootstrap-select/scripts")
        @Scripts.Render("~/bundle/bootstrap-datepicker/scripts")
        @Scripts.Render("~/bundle/scriptsDetailTable/script")
    }
    <script src="https://maps.googleapis.com/maps/api/js?v=3&sensor=false&libraries=geometry"></script>
    <script>

    //$(document).ready(function () {
    function myMap() {

        startTime()
        document.getElementById("loading").style.visibility = "visible";//sayfa yüklenirken loading gif i gösterilir
        document.getElementById("div1").style.visibility = "hidden";//sayfa yüklenirken tablo gizlenir
        //alert('ready2')
        var counter = 1;
        var bant = false;
        var deviceHeight = document.documentElement.clientHeight;
        //Google Metodları
        //myMap()
        //alert('myMap')
        //alert('deviceHeight: ' + deviceHeight);
        var mapCanvas = document.getElementById("map0");
        var mapCanvas2 = document.getElementById("map1");
        var mapCanvas3 = document.getElementById("map2");

        var myCenter = { lat: 36.805533, lng: 34.626287 };
        var mapOptions = {
            center: myCenter,
            zoom: 10,
            disableDefaultUI: true
        };
        var mapOptions2 = {
            center: myCenter,
            zoom: 15,
            disableDefaultUI: true
        };

        var map;
        var map2;
        var map3;
        var model = @Html.Raw(Json.Encode(Model));
        var nobetciEczaneler = new Array();
        var mesafeler = new Array();
        var mesafelerNewArray = new Array();
        var mesafeCounter = 0;
        //modelden nöbetçi eczaneleri alır:
        for (var g = 0; g < 3; g++) {
       // for (var g = 0; g < model.NobetciEczaneler.length; g++) {
            //quicksort:
            var newElement = {
                adi: model.NobetciEczaneler[g].Adi,
                koordinatx: model.NobetciEczaneler[g].Enlem,
                koordinaty: model.NobetciEczaneler[g].Boylam,
                tel: model.NobetciEczaneler[g].TelefonNo,
                adres: model.NobetciEczaneler[g].Adres,
                adresTarifi: model.NobetciEczaneler[g].AdresTarifiKisa,
            }
            nobetciEczaneler.push(newElement)
        }
        eczaneleriKutularaDoldur()

        //div leri doldurur
        function eczaneleriKutularaDoldur() {
            jQuery.each(nobetciEczaneler, function (i, val) {

                var adi = nobetciEczaneler[i].adi
                var tel = nobetciEczaneler[i].tel
                var adres = nobetciEczaneler[i].adres
                var adresTarifi = nobetciEczaneler[i].adresTarifi
                var intNumberOfi = parseInt(i);
                intNumberOfi = intNumberOfi + 1;
                //alert('i: ' + intNumberOfi.toString())

                //var img = $('<img />',
                //    {
                //        id: 'elogo',
                //        src: '../../../../Content/images/NobetciEczaneLogoUfaks.png',
                //        width: 30,
                //        height: 30
                //    })
                //    .appendTo($("#div_" + intNumberOfi));

               // alert(tel.length)
                if(tel!=null)
                    $("#div_" + intNumberOfi).append("<h4> " + adi + " Eczanesi </h4>" +
                    "<h7 style=\"color:white\">" + adres + "</h7>" +
                        "</br ><h7 style=\"color:yellow\">" + adresTarifi + "</h7>"
                    +
                   "</br ><h4>0 " + tel.substr(0, 3) + " " + tel.substr(3, 3) + " " + tel.substr(6, 2) + " " + tel.substr(8, 2) + "</h4>"

                   // "</br >0" + tel
                );
                else
                    $("#div_" + intNumberOfi).append("<h4> " + adi + " Eczanesi  </h4>" +
                        "<h7 style=\"color:white\">" + adres + "</h7>" +
                        "</br ><h7 style=\"color:yellow\">" + adresTarifi + "</h7>"
                        +
                        //  "</br ><h4>0 " + tel.substr(0, 3) + " " + tel.substr(4, 3) + " " + tel.substr(7, 2) + " " + tel.substr(9, 2) + "</h4>"

                        "</br ><h4>0" + tel + + "</h4>"
                    );
                // $("p").append("<strong>Hello</strong>");
                // Will stop running after "three"
                //return (val !== "three");
            });
        }
        function eczaneleriKutularaBosalt() {
            jQuery.each(nobetciEczaneler, function (i, val) {
                var intNumberOfi = parseInt(i);
                intNumberOfi = intNumberOfi + 1;
                $("#div_" + intNumberOfi).empty()
            });
        }
        //sol menü renkleri ayarlar
        function changeColor(counter) {
            // alert('changeColor counter' + counter)
            for (var k = 1; k < 4; k++) {
                if (k == counter) {
                    $("#div_" + k).css('background-color', '');
                    $("#div_" + k).css('background-color', ' #008000');
                }
                else {
                    $("#div_" + k).css('background-color', '');
                    $("#div_" + k).css('background-color', 'purple');
                }
                var adi = nobetciEczaneler[counter - 1].adi
                var tel = nobetciEczaneler[counter - 1].tel
                var adres = nobetciEczaneler[counter - 1].adres
                var adresTarifi = nobetciEczaneler[counter - 1].adresTarifi

                //var str = 'Mozilla';
                //console.log(str.substr(1, 2));
                //// expected output: "oz"
                //console.log(str.substr(2));
                //// expected output: "zilla"
                //alert(tel.substr(0, 3))
                //alert(tel.substr(4, 5))
                //alert(tel.substr(6, 7))
              //  alert(tel.length)
               // if (tel.length == 10)
               // alert(tel.length)
                //if (tel != null)
                //$("#div_100").html("<span>" +
                //    "<img style=\"width: 40px; height: 40px\"  src=\"../../../../Content/images/NobetciEczaneLogoUfaks.png\" />"
                //    + "</h2> " + adi + " Eczanesi  </h2>" +
                //    "<h4> " + adres + "</h4>" +
                //    "<h3 style=\"color:red\">  " + adresTarifi + "</h3>" +
                //    "<h3>0 " + tel.substr(0, 3) + " " + tel.substr(3, 3) + " " + tel.substr(6, 2) + " " + tel.substr(8, 2) + "</h4>" +
                //        "</span > ");
                //else
                //    $("#div_100").html("<span>" +
                //        "<img style=\"width: 40px; height: 40px\"  src=\"../../../../Content/images/NobetciEczaneLogoUfaks.png\" />"
                //        + " </h2> " + adi + " Eczanesi </h2>" +
                //        "<h4> " + adres + "</h4>" +
                //        "<h3 style=\"color:red\">  " + adresTarifi + "</h3>" +
                //        "<h3>0 " + tel + "</h3>" +
                //        "</span > ");
                //var img = $('<img />',
                //    {
                //        id: 'elogo',
                //        src: '../../../../Content/images/NobetciEczaneLogoUfaks.png',
                //        width: 50,
                //        height: 50
                //    })
                //    .appendTo($("div_100"));
                //$("#div_100").css({
                //    'background-color': '#000000',
                //    'color': 'white',
                //    'font-size': '35px',
                //    ' text-align': 'center',
                //});

            }
        }
        function changeQRCode(counter) {
            var locationOfDestination = {
                adi: nobetciEczaneler[counter - 1].adi,
                koordinatx: nobetciEczaneler[counter - 1].koordinatx,
                koordinaty: nobetciEczaneler[counter - 1].koordinaty,
                tel: nobetciEczaneler[counter - 1].tel,
                adres: nobetciEczaneler[counter - 1].adres
            }
            //alert('newStartLat')
            var newStartLat = locationOfCurrentPharmacy.koordinatx;
            var newStartLng = locationOfCurrentPharmacy.koordinaty;
            var newEndLat = locationOfDestination.koordinatx;
            var newEndLng = locationOfDestination.koordinaty;

            generateQRCode(newEndLat + "," + newEndLng)

        }
        //Ekranın Bulunduğu Yer Modelden Alınır:
        var locationOfCurrentPharmacy = {
            adi: model.EkraninBulunduguEczane.Adi,
            koordinatx: model.EkraninBulunduguEczane.Enlem,
            koordinaty: model.EkraninBulunduguEczane.Boylam,
            tel: model.EkraninBulunduguEczane.TelefonNo,
            adres: model.EkraninBulunduguEczane.Adres,
            adresTarifi: model.EkraninBulunduguEczane.AdresTarifiKisa
        }
        //alert(model.NobetciEczaneler[1].Adi)

        //alert('nobetciEczaneImage')
        var bosImage = '../../../../Content/images/bos.png';
        var peopleIcon = '../../../../Content/images/peopleIcon.png';
        // alert('recursivelyChangePharmacy1')
        //start recursive

        var directionsDisplay;
        var directionsDisplay2;

        var directionsService = new google.maps.DirectionsService;

        var markers = [
            //{ lat: 37.769, lng: -122.446 }
        ];
        recursivelyChangePharmacy();//(directionsService, directionsDisplay);
        //alert(' banttanYayinla tamam')

        //banttanYayinla()



        //alert(model.NobetciEczaneler[1].Adi)
        //nöbetçi eczanelerin markerları oluşturulur
        //bu kullanılmıyor
        //var mymarkers = new Array();
        ////alert('marker1')

        ////modelden nöbetçi eczanelerin merkerlar alır:
        //for (var f = 0; f < model.NobetciEczaneler.length; f++) {
        //    //alert('marker2')
        //    var startLocationf = { lat: model.NobetciEczaneler[f].Enlem, lng: model.NobetciEczaneler[f].Boylam };
        //    var myInfoWindowContent = '<p>' + model.NobetciEczaneler[f].Adi + '</sapn> </p>'
        //    var newMarker = {
        //        coordinates: startLocationf,
        //        content: myInfoWindowContent,
        //        image: nobetciEczaneImage
        //    }
        //    mymarkers.push(newMarker)
        //}

        function recursivelyChangePharmacy() {//recursively nöbetçi eczaneleri değiştir
             if (counter > 3)
                 counter = 1;
             changeColor(counter)
                //alert('nobetciEczaneler[0].koordinatx: ' + nobetciEczaneler[0].koordinatx)

               //alert('nobetciEczaneler[counter-1].koordinatx: ' + nobetciEczaneler[counter-1].koordinatx)
                //Gidilecek Yer:
            var locationOfDestination = {
                adi: nobetciEczaneler[counter - 1].adi,
                koordinatx: nobetciEczaneler[counter - 1].koordinatx,
                koordinaty: nobetciEczaneler[counter - 1].koordinaty,
                tel: nobetciEczaneler[counter - 1].tel,
                adres: nobetciEczaneler[counter - 1].adres
            }
                //alert('newStartLat')
            var newStartLat = locationOfCurrentPharmacy.koordinatx;
            var newStartLng = locationOfCurrentPharmacy.koordinaty;
            var newEndLat = locationOfDestination.koordinatx;
            var newEndLng = locationOfDestination.koordinaty;

            var startLocation = { lat: newStartLat, lng: newStartLng };
            var endLocation = { lat: newEndLat, lng: newEndLng };
                // alert('newEndLng: ' + newEndLng)

                //mesafeHesapla(startLocation, endLocation)
            var nobetciEczaneImage = '../../../../Content/images/NobetciEczaneLogoUfak.png';

            var startOptions = {
                coordinates: startLocation,
                //content: '<p>Bulunduğunuz Yer</sapn> </p>',
                image: peopleIcon
            };
            //alert('startLocation.lat: ' + startLocation.lat)
            //alert('startLocation.lng: ' + startLocation.lng)
            var endOptions = {
                coordinates: endLocation,
                content: locationOfDestination.adi,
                image: nobetciEczaneImage
            };
            //alert('startOption.coordinates.lat:  ' + startOptions.coordinates.lat)
            //alert('startOption.coordinates.lng:  ' + startOptions.coordinates.lng)
            changeQRCode(counter)

            if (counter == 1)
            {
                map = new google.maps.Map(mapCanvas, mapOptions);
                directionsDisplay = new google.maps.DirectionsRenderer
                    ({
                        suppressMarkers: true,
                        preserveViewport: false
                        //,
                        //polylineOptions: {
                        //strokeColor: "#0000ff",
                        //strokeOpacity: 0.5
                        //}
                    });
                //directionsDisplay.setMap(null);
                var directionsService = new google.maps.DirectionsService;

                //map = new google.maps.Map(mapCanvas, mapOptions);
                directionsDisplay.setMap(map);
                calculateAndDisplayRoute(directionsService, directionsDisplay, startOptions, endOptions); /* Request next message  */
            }
            else if (counter == 2)
            {
                map2 = new google.maps.Map(mapCanvas2, mapOptions);
                directionsDisplay2 = new google.maps.DirectionsRenderer
                    ({
                        suppressMarkers: true,
                        preserveViewport: false
                        //,
                        //polylineOptions: {
                        //strokeColor: "#0000ff",
                        //strokeOpacity: 0.5
                        //}
                    });
               // directionsDisplay.setMap(null);
                //map = new google.maps.Map(mapCanvas, mapOptions);
                var directionsService2 = new google.maps.DirectionsService;

                directionsDisplay2.setMap(map2)
                calculateAndDisplayRoute(directionsService2, directionsDisplay2, startOptions, endOptions); /* Request next message  */
            }
            else if (counter == 3)
            {
                map3 = new google.maps.Map(mapCanvas3, mapOptions);
                directionsDisplay3 = new google.maps.DirectionsRenderer
                    ({
                        suppressMarkers: true,
                        preserveViewport: false
                        //,
                        //polylineOptions: {
                        //strokeColor: "#0000ff",
                        //strokeOpacity: 0.5
                        //}
                    });
                //directionsDisplay.setMap(null);
                //map = new google.maps.Map(mapCanvas, mapOptions);
                var directionsService3 = new google.maps.DirectionsService;

                directionsDisplay3.setMap(map3)
                calculateAndDisplayRoute(directionsService3, directionsDisplay3, startOptions, endOptions); /* Request next message  */
            }

            if (mesafeCounter == 3) {//mesafeler hesaplandıktan sonra
                //alert('mesafeCounter')
                nobetciEczaneler = []
                //alert('quicksort')
                var mesafelerNewArray = new Array()
                for (var c = 0; c < mesafeler.length; c++) {
                    //alert('mesafeler[c].mesafem: ' + mesafeler[c].mesafe)
                    mesafelerNewArray.push(mesafeler[c].mesafe)
                }
                //quickSort
                mesafelerNewArray = quickSort(mesafelerNewArray, 0, mesafelerNewArray.length - 1);

                //for (var b = 0; b < mesafelerNewArray.length; b++) {
                //    alert('mesafelerNewArray[b]: ' + mesafelerNewArray[b])
                //}
                for (var d = 0; d < mesafelerNewArray.length; d++) {
                    for (var e = 0; e < mesafeler.length; e++) {
                        if (mesafelerNewArray[d] == mesafeler[e].mesafe) {
                            var newElemente = {
                                adi: model.NobetciEczaneler[e].Adi,
                                koordinatx: model.NobetciEczaneler[e].Enlem,
                                koordinaty: model.NobetciEczaneler[e].Boylam,
                                tel: model.NobetciEczaneler[e].TelefonNo,
                                adres: model.NobetciEczaneler[e].Adres,
                                adresTarifi: model.NobetciEczaneler[e].AdresTarifiKisa,
                                oldIndex: mesafeler[e].Index
                            }
                            nobetciEczaneler.push(newElemente)
                        }
                    }
                }
                //for (var d = 0; d < nobetciEczaneler.length; d++) {
                //    alert(' nobetciEczaneler[d].adi: ' + nobetciEczaneler[d].adi)
                //}
                eczaneleriKutularaBosalt()
                eczaneleriKutularaDoldur()
                counter = 2
                banttanYayinla()
                //kutular tamam, maplarin sırası değişmeli!!
            }

            counter++

            if (mesafeCounter < 3) {//yollar oluşturulurken
                setTimeout(
                    recursivelyChangePharmacy,//(directionsService, directionsDisplay) /* Request next message  */
                    1000 /* ..after ms seconds */
                );
            }
        }
        function banttanYayinla() {
            //generateQRCode(newEndLat + "," + newEndLng)
           // alert("banttanYayinla")

            if (counter > 3)
                counter = 1;

            changeColor(counter)
            changeQRCode(counter)

            var indexFromCounter = counter - 1;

            for (var sayac = 0; sayac < 3; sayac++) {
                if (sayac == indexFromCounter) {
                    $("#map" + nobetciEczaneler[sayac].oldIndex).css('display', 'block')
                    $("#lbl_mesafe" + nobetciEczaneler[sayac].oldIndex).css('display', 'block');
                }
                else {
                    $("#map" + nobetciEczaneler[sayac].oldIndex).css('display', 'none')
                    $("#lbl_mesafe" + nobetciEczaneler[sayac].oldIndex).css('display', 'none');
                }
            }

            var locationOfDestination = {
                adi: nobetciEczaneler[counter - 1].adi,
                koordinatx: nobetciEczaneler[counter - 1].koordinatx,
                koordinaty: nobetciEczaneler[counter - 1].koordinaty,
                tel: nobetciEczaneler[counter - 1].tel,
                adres: nobetciEczaneler[counter - 1].adres
            }

            //alert('newStartLat')
            var newStartLat = locationOfCurrentPharmacy.koordinatx;
            var newStartLng = locationOfCurrentPharmacy.koordinaty;
            var newEndLat = locationOfDestination.koordinatx;
            var newEndLng = locationOfDestination.koordinaty;

            var startLocation = { lat: newStartLat, lng: newStartLng };
            var endLocation = { lat: newEndLat, lng: newEndLng };
            //center = bounds.getCenter();
            var bounds = new google.maps.LatLngBounds();
           // center = bounds.getCenter();
            var y2_y1 = (newEndLng - newStartLng) / 2;

            //alert('newStartLat: ' + newStartLat)
            //alert('newStartLng: ' + newStartLng)
            //alert('newEndLat: ' + newEndLat)
            //alert('newEndLng: ' + newEndLng)
            //alert('counter: ' + counter)

            //alert('eczane:' + locationOfDestination.adi)
            var ortaNokta_lat = getOrtaNoktaLat(newStartLat, newEndLat)
            var ortaNokta_lng = getOrtaNoktaLng(newStartLng, newEndLng)
            //alert('ortaNokta_lat: ' + ortaNokta_lat)
           // alert('ortaNokta_lng: ' + ortaNokta_lng)
            var enBuyukUzaklik = getEnBuyukUzaklik(newStartLat, newEndLat, newStartLng, newEndLng);
            var pt = new google.maps.LatLng(ortaNokta_lat, ortaNokta_lng);
            //alert('enBuyukUzaklik: ' + enBuyukUzaklik)
            var zoomDegerim = getZoomDegeri(enBuyukUzaklik);
            //alert('zoomDegerim: ' + zoomDegerim)


                map.setCenter(pt);
                map.setZoom(zoomDegerim);

                map2.setCenter(pt);
                map2.setZoom(zoomDegerim);

                map3.setCenter(pt);
                map3.setZoom(zoomDegerim);



            //map.fitBounds(bounds);
            //map2.fitBounds(bounds);
            //map3.fitBounds(bounds);
            if (counter == 1) {
                document.getElementById("div1").style.visibility = "visible";//sayfa yüklenirken loading gif i gösterilir
                document.getElementById("loading").style.display = "none";//sayfa yüklenirken tablo gizlenir
            }
            counter++;
            //alert('counter: ' + counter)
           
            setTimeout(
                banttanYayinla,//(directionsService, directionsDisplay), /* Request next message  */
                5000 /* ..after ms seconds */
            );

        }
        function getEnBuyukUzaklik(newStartLat, newEndLat, newStartLng, newEndLng) {
            var lat = Math.abs(newStartLat - newEndLat)
            var lng = Math.abs(newStartLng - newEndLng)
            if (lat > lng)
                return lat
            else
                return lng
        }
        function getZoomDegeri(enBuyukUzaklik) {
             var ln2 = Math.log(enBuyukUzaklik * 100000)
            var result = -1.486 * ln2 + 25.475
            return result
            
        }
        function getOrtaNoktaLat(newStartLat, newEndLat) {
            var result = newStartLat
            var x2_x1
            if (newStartLat > newEndLat) {
                x2_x1 = (newStartLat - newEndLat) / 2;
                //alert('x2_x1: ' + x2_x1)
                result = newEndLat + x2_x1;
            }
            else {
                x2_x1 = (newEndLat - newStartLat) / 2;
                result = newStartLat + x2_x1;
            }
            return result.toFixed(6);
        }
        function getOrtaNoktaLng(newStartLng, newEndLng) {
            var result = newStartLng
            var y2_y1
            if (newStartLng > newEndLng) {
                y2_y1 = (newStartLng - newEndLng) / 2;
                result = newEndLng + y2_y1;
            }
            else {
                y2_y1 = (newEndLng - newStartLng) / 2;
                result = newStartLng + y2_y1;
            }
            return result.toFixed(6);
        }
        function calculateAndDisplayRoute(mydirectionsService, mydirectionsDisplay, startOptions, endOptions) {
            //alert('calculateAndDisplayRoute2')
            //alert('startOption.coordinates.lat:  ' + startOptions.coordinates.lat)
            //alert('startOption.coordinates.lng:  ' + startOptions.coordinates.lng)
            //AddMarker(startOptions);
            //AddMarker(endOptions);
            //deleteMarkers()
            AddMarker(startOptions);
            AddMarker(endOptions);
            //alert('startOptions.coordinates.lat: ' + startOptions.coordinates.lat)
            //alert('endOptions.coordinates.lat: ' + endOptions.coordinates.lat)
            var request = {
                origin: startOptions.coordinates,
                destination: endOptions.coordinates,
                travelMode: 'DRIVING'
            };
            mydirectionsService.route(request, function (result, status) {
                if (status == "OK") {
                    //alert('OK')
                    mydirectionsDisplay.setDirections(result);
                    var mesafem = mesafeHesapla(startOptions.coordinates, endOptions.coordinates)
                    var indexFromCounter = counter - 2;
                    if (mesafeCounter < 3) {
                        var newElement = {
                            adi: model.NobetciEczaneler[mesafeCounter].Adi,
                            mesafe: parseInt(mesafem.toFixed(0)),
                            Index: indexFromCounter
                        }
                        $("#lbl_mesafe" + mesafeCounter).text(" " + mesafem.toFixed(0) + "m.");
                        mesafeler.push(newElement)
                    }
                    mesafeCounter++;
                    //alert('mesafeCounter: ' + mesafeCounter)
                }
                else {
                    //window.alert('Directions request failed due to ' + status);
                    $('#lbl_mesafe').text("HATA: " + status);
                    $("#lbl_mesafe0").css('background-color', '#ff0000');
                }

                console.log(result, status);
            });

            var indexFromCounter = counter - 1;

            for (var sayac = 0; sayac < 3; sayac++) {
                if (sayac == indexFromCounter) {
                    $("#map" + sayac).css('display', 'block')
                    $("#lbl_mesafe" + sayac).css('display', 'block');
                }
                else {
                    $("#map" + sayac).css('display', 'none')
                    $("#lbl_mesafe" + sayac).css('display', 'none');
                }
            }
           // counter++;
        }
        // Sets the map on all markers in the array.
        function setMapOnAll(map) {
            for (var i = 0; i < markers.length; i++) {
                markers[i].setMap(map);
            }
        }
        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers() {
            setMapOnAll(null);
        }
        // Deletes all markers in the array by removing references to them.
        function deleteMarkers() {
            clearMarkers();
            markers = [];
        }
        // Adds a marker to the map and push to the array.
        function AddMarker(options) {
            //alert('counter :' + counter)
            //alert('options.coordinates.lat:  ' + options.coordinates.lat)
            //alert('options.coordinates.lng:  ' + options.coordinates.lng)
            if (counter == 1) {
                var marker = new google.maps.Marker({
                    position: options.coordinates,
                    map: map
                    //,
                    // icon: options.image
                });
                markers.push(marker);
                var bounds = new google.maps.LatLngBounds();
                //center = bounds.getCenter();
                map.fitBounds(bounds);
            }
            else if (counter == 2) {
                var marker = new google.maps.Marker({
                    position: options.coordinates,
                    map: map2
                    //,
                    // icon: options.image
                });
                markers.push(marker);
                var bounds = new google.maps.LatLngBounds();
                //center = bounds.getCenter();
                map2.fitBounds(bounds);
            }
            else if (counter == 3) {
                var marker = new google.maps.Marker({
                    position: options.coordinates,
                    map: map3
                    //,
                    // icon: options.image
                });
                markers.push(marker);
                var bounds = new google.maps.LatLngBounds();
                //center = bounds.getCenter();
                map3.fitBounds(bounds);
            }

            if (options.image) {
                marker.setIcon(options.image)
            }

            if (options.content) {
                var boldContent = '<strong><h6>' + options.content + '</h6></strong>';
                var infoWindow = new google.maps.InfoWindow({
                    content: boldContent,
                });
                //marker.addListener('click', function () {
                infoWindow.open(map, marker);
                //});
            }

        }
        function mesafeHesapla(startLocation, endLocation) {
            var mesafe = "0";
            //alert('mesafeHesapla counter: ' + counter)
            var distance = google.maps.geometry.spherical.computeDistanceBetween
                (new google.maps.LatLng(startLocation.lat, startLocation.lng),
                new google.maps.LatLng(endLocation.lat, endLocation.lng));

            mesafe = " " + (distance / 1000).toFixed(2) + " km.";

            var today = new Date();
            var saat = today.getHours();

            if (parseInt(saat) >= 8)
                $('#lbl_tarih').text(getDate() + ' 18:00 - ' + getTomorrow() + ' 08:00 tarihleri arası nöbet listesi');
            else
                $('#lbl_tarih').text(getYesterday() + ' 18:00 - ' + getDate() + ' 08:00 tarihleri arası nöbet listesi');

            return distance;
        }
        function getDate() {
            var today = new Date();
            var dd = today.getDate();
            var mm = today.getMonth() + 1; //January is 0!

            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            var today = dd + '.' + mm + '.' + yyyy;

            var d = new Date();
            var weekday = new Array(7);
            weekday[0] = " Pazar";
            weekday[1] = " Pazartesi";
            weekday[2] = " Salı";
            weekday[3] = " Çarşamba";
            weekday[4] = " Perşembe";
            weekday[5] = " Cuma";
            weekday[6] = " Cumartesi";

            var n = weekday[d.getDay()];
            return today + n;
        }
        function getYesterday() {
            var today = new Date();
            var dd = today.getDate() - 1;
            var mm = today.getMonth() + 1; //January is 0!

            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            var today = dd + '.' + mm + '.' + yyyy;

            var d = new Date();
            var weekday = new Array(7);
            weekday[0] = " Pazar";
            weekday[1] = " Pazartesi";
            weekday[2] = " Salı";
            weekday[3] = " Çarşamba";
            weekday[4] = " Perşembe";
            weekday[5] = " Cuma";
            weekday[6] = " Cumartesi";

            var n = weekday[d.getDay() - 1];
            if (d.getDay() == 0)
                n = " Cumartesi"
            return today + n;
        }
        function getTomorrow() {
            var today = new Date();
            var dd = today.getDate() + 1;
            var mm = today.getMonth() + 1; //January is 0!
            //alert('getTomorrow')
            var yyyy = today.getFullYear();
            if (dd < 10) {
                dd = '0' + dd;
            }
            if (mm < 10) {
                mm = '0' + mm;
            }
            var today = dd + '.' + mm + '.' + yyyy;
            //alert('today: ' + today)
            var d = new Date();
            var weekday = new Array(7);
            weekday[0] = " Pazar";
            weekday[1] = " Pazartesi";
            weekday[2] = " Salı";
            weekday[3] = " Çarşamba";
            weekday[4] = " Perşembe";
            weekday[5] = " Cuma";
            weekday[6] = " Cumartesi";

            var n = weekday[d.getDay() + 1];
            if (d.getDay() == 6)
                n = " Pazar"
            return today + n;
        }
        function startTime() {

            var today = new Date();
            var h = today.getHours();
            var m = today.getMinutes();
            var s = today.getSeconds();
            h = checkTime(h);
            m = checkTime(m);
            s = checkTime(s);
            document.getElementById('labelSaat').innerHTML =
                h + ":" + m + ":" + s;
            var t = setTimeout(startTime, 500);
        }
        function checkTime(i) {
            if (i < 10) { i = "0" + i };  // add zero in front of numbers < 10
            return i;
        }
        function generateQRCode(url) {
            //alert(url)
            //alert('url')
            $.ajax({
                type: "POST",
                url: "../../../EczaneNobet/NobetciEczaneEkrani/QrCodeGeneate",
                data: "{'qrcode':\"" + url + "\"}",
                contentType: "application/json; charset=utf-8",
                dataType: "json",

                success: function (data) {

                    //alert('success');
                    var imag = "<img "
                        + "src='" + "data:image/jpg;base64,"
                        + data.base64imgage + "'/>";
                    $("#divMyLetterImage").html(imag)
                    // location.reload();
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    addmsg("error", textStatus + " (" + errorThrown + ")");
                    alert(textStatus + " (" + errorThrown + ")");
                }
            });
        }
        function quickSort(items, left, right) {

            var index;

            if (items.length > 1) {

                index = partition(items, left, right);

                if (left < index - 1) {
                    quickSort(items, left, index - 1);
                }

                if (index < right) {
                    quickSort(items, index, right);
                }

            }

            return items;
        }
        function partition(items, left, right) {

            var pivot = items[Math.floor((right + left) / 2)],
                i = left,
                j = right;

            while (i <= j) {

                while (items[i] < pivot) {
                    i++;
                }

                while (items[j] > pivot) {
                    j--;
                }

                if (i <= j) {
                    swap(items, i, j);
                    i++;
                    j--;
                }
            }

            return i;
        }
        function swap(items, firstIndex, secondIndex) {
            var temp = items[firstIndex];
            items[firstIndex] = items[secondIndex];
            items[secondIndex] = temp;
        }
    }
    //});
    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAP29ma6oCPNwQPFdXbilDCYBKP2Gk52CE&callback=myMap">
    </script>
</body>



